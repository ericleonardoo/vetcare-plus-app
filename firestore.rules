rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // TUTORS (CLIENTS)
    match /tutors/{userId} {
      // Qualquer usuário autenticado pode criar seu próprio perfil (documento de tutor)
      allow create: if request.auth != null && request.auth.uid == userId;

      // Um usuário só pode ler, atualizar ou deletar seu próprio perfil
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;

      // Profissionais ('vet') podem ler qualquer perfil de tutor
      allow read: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
    }

    // PETS
    match /pets/{petId} {
      // Um usuário autenticado pode criar um pet se o tutorId do pet for o seu próprio UID
      allow create: if request.auth != null && request.resource.data.tutorId == request.auth.uid;
      
      // Um usuário pode ler, atualizar ou deletar um pet se ele for o dono (tutorId)
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/pets/$(petId)).data.tutorId == request.auth.uid;
      
      // Profissionais ('vet') podem ler ou atualizar qualquer pet (para adicionar histórico, etc.)
      allow read, update: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
    }
    
    // APPOINTMENTS
    match /appointments/{appointmentId} {
      // Um usuário autenticado pode criar um agendamento se o tutorId for o seu
      allow create: if request.auth != null && request.resource.data.tutorId == request.auth.uid;
      
      // Um usuário pode ler seus próprios agendamentos
      allow read: if request.auth != null && get(/databases/$(database)/documents/appointments/$(appointmentId)).data.tutorId == request.auth.uid;
      
      // Profissionais podem ler todos os agendamentos
      allow read, update: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
    }
    
    // INVOICES (FATURAS)
    match /invoices/{invoiceId} {
      // Apenas profissionais podem criar faturas
      allow create: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
      
      // Um cliente pode ler apenas suas próprias faturas
      allow read: if request.auth != null && get(/databases/$(database)/documents/invoices/$(invoiceId)).data.clientId == request.auth.uid;
      
      // Profissionais podem ler e atualizar (ex: marcar como paga) qualquer fatura
      allow read, update: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
    }
    
    // INVENTORY (ESTOQUE)
    match /inventory/{itemId} {
      // Apenas profissionais podem ler e gerenciar o estoque
      allow read, write: if request.auth != null && request.auth.token.email.matches('.*\\+vet@.*');
    }
  }
}